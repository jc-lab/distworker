{
    "schemes": [
        "http",
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "Distributed task processing system API",
        "title": "Distworker API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "AGPL-3.0",
            "url": "https://www.gnu.org/licenses/agpl-3.0.html"
        },
        "version": "1.0"
    },
    "basePath": "/api/v1",
    "paths": {
        "/health": {
            "get": {
                "description": "Get system health status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "summary": "Health check",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.HealthResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/api.HealthResponse"
                        }
                    }
                }
            }
        },
        "/metrics": {
            "get": {
                "description": "Get Prometheus metrics",
                "consumes": [
                    "text/plain"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "system"
                ],
                "summary": "Prometheus metrics",
                "responses": {
                    "200": {
                        "description": "Prometheus metrics",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/provisioners": {
            "get": {
                "description": "Get a list of all worker provisioners",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "provisioners"
                ],
                "summary": "List provisioners",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Provisioner"
                            }
                        }
                    },
                    "501": {
                        "description": "Not Implemented",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/queues": {
            "get": {
                "description": "Get a list of all task queues",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "queues"
                ],
                "summary": "List queues",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ListQueuesResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new task queue",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "queues"
                ],
                "summary": "Create a new queue",
                "parameters": [
                    {
                        "description": "Queue data",
                        "name": "queue",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.CreateQueueRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Queue"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/queues/{queue_name}": {
            "get": {
                "description": "Get detailed information about a specific queue",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "queues"
                ],
                "summary": "Get queue by name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Queue name",
                        "name": "queue_name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Queue"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update queue description",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "queues"
                ],
                "summary": "Update queue",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Queue name",
                        "name": "queue_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Queue update data",
                        "name": "queue",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.UpdateQueueRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Queue"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a task queue",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "queues"
                ],
                "summary": "Delete queue",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Queue name",
                        "name": "queue_name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.DeleteQueueResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/queues/{queue_name}/stats": {
            "get": {
                "description": "Get statistics for a specific queue",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "queues"
                ],
                "summary": "Get queue statistics",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Queue name",
                        "name": "queue_name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.QueueStats"
                        }
                    },
                    "501": {
                        "description": "Not Implemented",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/tasks": {
            "get": {
                "description": "Get a paginated list of tasks with optional filtering",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tasks"
                ],
                "summary": "List tasks",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter by queue name",
                        "name": "queue",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by task status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Items per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ListTasksResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new task in the specified queue",
                "consumes": [
                    "application/json",
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tasks"
                ],
                "summary": "Create a new task",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "wait timeout (milliseconds). -1 is infinite, 0 is disabled, \u003e=0 is wait",
                        "name": "wait",
                        "in": "query"
                    },
                    {
                        "description": "Task data",
                        "name": "task",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.CreateTaskRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Task"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/tasks/{task_id}": {
            "get": {
                "description": "Get detailed information about a specific task",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tasks"
                ],
                "summary": "Get task by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task ID",
                        "name": "task_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Task"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Cancel a pending or processing task",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tasks"
                ],
                "summary": "Cancel/Delete a task",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task ID",
                        "name": "task_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.DeleteTaskResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/workers": {
            "get": {
                "description": "Get a list of all connected workers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workers"
                ],
                "summary": "List workers",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ListWorkersResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/workers/{worker_id}": {
            "delete": {
                "description": "Disconnect a specific worker",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workers"
                ],
                "summary": "Disconnect worker",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Worker ID",
                        "name": "worker_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.DeleteWorkerResponse"
                        }
                    },
                    "501": {
                        "description": "Not Implemented",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.CreateQueueRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "api.CreateTaskRequest": {
            "type": "object",
            "properties": {
                "input": {
                    "type": "object",
                    "additionalProperties": true
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "queue": {
                    "type": "string"
                },
                "retry": {
                    "type": "integer"
                },
                "timeout": {
                    "type": "string"
                }
            }
        },
        "api.DeleteQueueResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                }
            }
        },
        "api.DeleteTaskResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "$ref": "#/definitions/types.TaskStatus"
                },
                "task_id": {
                    "type": "string"
                }
            }
        },
        "api.DeleteWorkerResponse": {
            "type": "object",
            "properties": {
                "current_task": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "api.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "api.HealthDetail": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "response_time": {
                    "type": "integer"
                },
                "status": {
                    "$ref": "#/definitions/types.HealthStatus"
                }
            }
        },
        "api.HealthResponse": {
            "type": "object",
            "properties": {
                "details": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/api.HealthDetail"
                    }
                },
                "error": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/types.HealthStatus"
                },
                "timestamp": {
                    "type": "integer"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "api.ListQueuesResponse": {
            "type": "object",
            "properties": {
                "queues": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Queue"
                    }
                }
            }
        },
        "api.ListTasksResponse": {
            "type": "object",
            "properties": {
                "pagination": {
                    "$ref": "#/definitions/api.PaginationInfo"
                },
                "tasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Task"
                    }
                }
            }
        },
        "api.ListWorkersResponse": {
            "type": "object",
            "properties": {
                "workers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Worker"
                    }
                }
            }
        },
        "api.PaginationInfo": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                },
                "total_pages": {
                    "type": "integer"
                }
            }
        },
        "api.UpdateQueueRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                }
            }
        },
        "models.FileInfo": {
            "type": "object",
            "properties": {
                "content_type": {
                    "type": "string"
                },
                "file_id": {
                    "type": "string"
                },
                "filename": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "storage_url": {
                    "type": "string"
                }
            }
        },
        "models.Provisioner": {
            "type": "object",
            "properties": {
                "last_heartbeat": {
                    "$ref": "#/definitions/models.UnixTime"
                },
                "max_workers": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/types.ProvisionerStatus"
                },
                "url": {
                    "type": "string"
                },
                "workers": {
                    "type": "integer"
                }
            }
        },
        "models.Queue": {
            "type": "object",
            "properties": {
                "created_at": {
                    "$ref": "#/definitions/models.UnixTime"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/types.QueueStatus"
                },
                "updated_at": {
                    "$ref": "#/definitions/models.UnixTime"
                }
            }
        },
        "models.QueueStats": {
            "type": "object",
            "properties": {
                "avg_processing_time": {
                    "type": "integer"
                },
                "completed_tasks": {
                    "type": "integer"
                },
                "current_workers": {
                    "type": "integer"
                },
                "failed_tasks": {
                    "type": "integer"
                },
                "peak_workers": {
                    "type": "integer"
                },
                "queue_name": {
                    "type": "string"
                },
                "total_tasks": {
                    "type": "integer"
                },
                "workers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Worker"
                    }
                }
            }
        },
        "models.Task": {
            "type": "object",
            "properties": {
                "completed_at": {
                    "$ref": "#/definitions/models.UnixTime"
                },
                "created_at": {
                    "$ref": "#/definitions/models.UnixTime"
                },
                "error": {
                    "$ref": "#/definitions/models.TaskError"
                },
                "files": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.FileInfo"
                    }
                },
                "input": {
                    "type": "object",
                    "additionalProperties": true
                },
                "max_retry": {
                    "type": "integer"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "queue": {
                    "type": "string"
                },
                "result": {
                    "type": "object",
                    "additionalProperties": true
                },
                "result_files": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.FileInfo"
                    }
                },
                "retried": {
                    "type": "integer"
                },
                "started_at": {
                    "$ref": "#/definitions/models.UnixTime"
                },
                "status": {
                    "$ref": "#/definitions/types.TaskStatus"
                },
                "task_id": {
                    "type": "string"
                },
                "timeout": {
                    "type": "integer"
                },
                "webhook_url": {
                    "type": "string"
                },
                "worker_id": {
                    "type": "string"
                }
            }
        },
        "models.TaskError": {
            "type": "object",
            "properties": {
                "code": {
                    "$ref": "#/definitions/types.TaskErrorCode"
                },
                "details": {
                    "type": "object",
                    "additionalProperties": true
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "models.UnixTime": {
            "type": "object",
            "properties": {
                "time.Time": {
                    "type": "string"
                }
            }
        },
        "models.Worker": {
            "type": "object",
            "properties": {
                "connected_at": {
                    "$ref": "#/definitions/models.UnixTime"
                },
                "current_task": {
                    "type": "string"
                },
                "last_heartbeat": {
                    "$ref": "#/definitions/models.UnixTime"
                },
                "provisioner_name": {
                    "type": "string"
                },
                "queues": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "resource_info": {
                    "type": "object",
                    "additionalProperties": true
                },
                "status": {
                    "$ref": "#/definitions/types.WorkerStatus"
                },
                "worker_id": {
                    "type": "string"
                }
            }
        },
        "types.HealthStatus": {
            "type": "string",
            "enum": [
                "up",
                "down",
                "degraded"
            ],
            "x-enum-varnames": [
                "HealthStatusUp",
                "HealthStatusDown",
                "HealthStatusDegraded"
            ]
        },
        "types.ProvisionerStatus": {
            "type": "string",
            "enum": [
                "up",
                "down"
            ],
            "x-enum-varnames": [
                "ProvisionerStatusUp",
                "ProvisionerStatusDown"
            ]
        },
        "types.QueueStatus": {
            "type": "string",
            "enum": [
                "active",
                "inactive"
            ],
            "x-enum-varnames": [
                "QueueStatusActive",
                "QueueStatusInactive"
            ]
        },
        "types.TaskErrorCode": {
            "type": "string",
            "enum": [
                "CANCELLED",
                "TIMEOUT",
                "WORKER_ERROR",
                "NETWORK_ERROR",
                "UNKNOWN"
            ],
            "x-enum-varnames": [
                "TaskErrorCodeCancelled",
                "TaskErrorCodeTimeout",
                "TaskErrorCodeWorkerError",
                "TaskErrorCodeNetworkError",
                "TaskErrorCodeUnknown"
            ]
        },
        "types.TaskStatus": {
            "type": "integer",
            "enum": [
                0,
                2,
                4,
                8
            ],
            "x-enum-varnames": [
                "TaskStatusPending",
                "TaskStatusProcessing",
                "TaskStatusCompleted",
                "TaskStatusFinished"
            ]
        },
        "types.WorkerStatus": {
            "type": "string",
            "enum": [
                "idle",
                "processing",
                "disconnected",
                "error"
            ],
            "x-enum-varnames": [
                "WorkerStatusIdle",
                "WorkerStatusProcessing",
                "WorkerStatusDisconnected",
                "WorkerStatusError"
            ]
        }
    }
}