//test

// Code generated by protoc-gen-go. DO NOT EDIT.
// distworker
// Copyright (C) 2025 JC-Lab
//
// SPDX-License-Identifier: AGPL-3.0-only
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: protocol.proto

package protocol

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 메시지 타입 열거형
type MessageType int32

const (
	MessageType_MESSAGE_TYPE_UNSPECIFIED              MessageType = 0
	MessageType_MESSAGE_TYPE_WORKER_REGISTER          MessageType = 2
	MessageType_MESSAGE_TYPE_WORKER_REGISTER_RESPONSE MessageType = 3
	MessageType_MESSAGE_TYPE_HEARTBEAT                MessageType = 9
	MessageType_MESSAGE_TYPE_TASK_ASSIGN              MessageType = 10
	MessageType_MESSAGE_TYPE_TASK_PROGRESS            MessageType = 11
	MessageType_MESSAGE_TYPE_TASK_COMPLETE            MessageType = 12
	MessageType_MESSAGE_TYPE_TASK_FAILED              MessageType = 13
)

// Enum value maps for MessageType.
var (
	MessageType_name = map[int32]string{
		0:  "MESSAGE_TYPE_UNSPECIFIED",
		2:  "MESSAGE_TYPE_WORKER_REGISTER",
		3:  "MESSAGE_TYPE_WORKER_REGISTER_RESPONSE",
		9:  "MESSAGE_TYPE_HEARTBEAT",
		10: "MESSAGE_TYPE_TASK_ASSIGN",
		11: "MESSAGE_TYPE_TASK_PROGRESS",
		12: "MESSAGE_TYPE_TASK_COMPLETE",
		13: "MESSAGE_TYPE_TASK_FAILED",
	}
	MessageType_value = map[string]int32{
		"MESSAGE_TYPE_UNSPECIFIED":              0,
		"MESSAGE_TYPE_WORKER_REGISTER":          2,
		"MESSAGE_TYPE_WORKER_REGISTER_RESPONSE": 3,
		"MESSAGE_TYPE_HEARTBEAT":                9,
		"MESSAGE_TYPE_TASK_ASSIGN":              10,
		"MESSAGE_TYPE_TASK_PROGRESS":            11,
		"MESSAGE_TYPE_TASK_COMPLETE":            12,
		"MESSAGE_TYPE_TASK_FAILED":              13,
	}
)

func (x MessageType) Enum() *MessageType {
	p := new(MessageType)
	*p = x
	return p
}

func (x MessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_protocol_proto_enumTypes[0].Descriptor()
}

func (MessageType) Type() protoreflect.EnumType {
	return &file_protocol_proto_enumTypes[0]
}

func (x MessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageType.Descriptor instead.
func (MessageType) EnumDescriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{0}
}

// Worker 상태 열거형
type WorkerHealth int32

const (
	WorkerHealth_WORKER_HEALTH_UNSPECIFIED WorkerHealth = 0
	WorkerHealth_WORKER_HEALTH_UP          WorkerHealth = 1
	WorkerHealth_WORKER_HEALTH_DOWN        WorkerHealth = 2
	WorkerHealth_WORKER_HEALTH_WARN        WorkerHealth = 3
)

// Enum value maps for WorkerHealth.
var (
	WorkerHealth_name = map[int32]string{
		0: "WORKER_HEALTH_UNSPECIFIED",
		1: "WORKER_HEALTH_UP",
		2: "WORKER_HEALTH_DOWN",
		3: "WORKER_HEALTH_WARN",
	}
	WorkerHealth_value = map[string]int32{
		"WORKER_HEALTH_UNSPECIFIED": 0,
		"WORKER_HEALTH_UP":          1,
		"WORKER_HEALTH_DOWN":        2,
		"WORKER_HEALTH_WARN":        3,
	}
)

func (x WorkerHealth) Enum() *WorkerHealth {
	p := new(WorkerHealth)
	*p = x
	return p
}

func (x WorkerHealth) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WorkerHealth) Descriptor() protoreflect.EnumDescriptor {
	return file_protocol_proto_enumTypes[1].Descriptor()
}

func (WorkerHealth) Type() protoreflect.EnumType {
	return &file_protocol_proto_enumTypes[1]
}

func (x WorkerHealth) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WorkerHealth.Descriptor instead.
func (WorkerHealth) EnumDescriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{1}
}

// Task 상태 열거형
type TaskStatus int32

const (
	TaskStatus_TASK_STATUS_UNSPECIFIED TaskStatus = 0
	TaskStatus_TASK_STATUS_PENDING     TaskStatus = 1
	TaskStatus_TASK_STATUS_PROCESSING  TaskStatus = 2
	TaskStatus_TASK_STATUS_COMPLETED   TaskStatus = 3
	TaskStatus_TASK_STATUS_FAILED      TaskStatus = 4
	TaskStatus_TASK_STATUS_CANCELLED   TaskStatus = 5
)

// Enum value maps for TaskStatus.
var (
	TaskStatus_name = map[int32]string{
		0: "TASK_STATUS_UNSPECIFIED",
		1: "TASK_STATUS_PENDING",
		2: "TASK_STATUS_PROCESSING",
		3: "TASK_STATUS_COMPLETED",
		4: "TASK_STATUS_FAILED",
		5: "TASK_STATUS_CANCELLED",
	}
	TaskStatus_value = map[string]int32{
		"TASK_STATUS_UNSPECIFIED": 0,
		"TASK_STATUS_PENDING":     1,
		"TASK_STATUS_PROCESSING":  2,
		"TASK_STATUS_COMPLETED":   3,
		"TASK_STATUS_FAILED":      4,
		"TASK_STATUS_CANCELLED":   5,
	}
)

func (x TaskStatus) Enum() *TaskStatus {
	p := new(TaskStatus)
	*p = x
	return p
}

func (x TaskStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_protocol_proto_enumTypes[2].Descriptor()
}

func (TaskStatus) Type() protoreflect.EnumType {
	return &file_protocol_proto_enumTypes[2]
}

func (x TaskStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaskStatus.Descriptor instead.
func (TaskStatus) EnumDescriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{2}
}

// Worker 등록 메시지
type WorkerRegister struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []byte                 `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`           // SignedWorkerRegister 에 대한 marshaled 값
	Signature     []byte                 `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"` // HMAC-SHA256(key = <SigningKey>, data = data)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorkerRegister) Reset() {
	*x = WorkerRegister{}
	mi := &file_protocol_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkerRegister) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerRegister) ProtoMessage() {}

func (x *WorkerRegister) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerRegister.ProtoReflect.Descriptor instead.
func (*WorkerRegister) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{0}
}

func (x *WorkerRegister) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *WorkerRegister) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type WorkerRegisterResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IdleTime      int32                  `protobuf:"varint,10,opt,name=idle_time,json=idleTime,proto3" json:"idle_time,omitempty"` // seconds (0 is infinite)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorkerRegisterResponse) Reset() {
	*x = WorkerRegisterResponse{}
	mi := &file_protocol_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkerRegisterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerRegisterResponse) ProtoMessage() {}

func (x *WorkerRegisterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerRegisterResponse.ProtoReflect.Descriptor instead.
func (*WorkerRegisterResponse) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{1}
}

func (x *WorkerRegisterResponse) GetIdleTime() int32 {
	if x != nil {
		return x.IdleTime
	}
	return 0
}

type SignedWorkerRegister struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ProvisionerName string                 `protobuf:"bytes,1,opt,name=provisioner_name,json=provisionerName,proto3" json:"provisioner_name,omitempty"`
	WorkerId        string                 `protobuf:"bytes,2,opt,name=worker_id,json=workerId,proto3" json:"worker_id,omitempty"` // 만약 provisioner 가 worker 을 만든 경우 라면
	Date            string                 `protobuf:"bytes,3,opt,name=date,proto3" json:"date,omitempty"`                         // 20220830T123600Z 형식
	ResourceInfo    *ResourceInfo          `protobuf:"bytes,4,opt,name=resource_info,json=resourceInfo,proto3" json:"resource_info,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *SignedWorkerRegister) Reset() {
	*x = SignedWorkerRegister{}
	mi := &file_protocol_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignedWorkerRegister) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignedWorkerRegister) ProtoMessage() {}

func (x *SignedWorkerRegister) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignedWorkerRegister.ProtoReflect.Descriptor instead.
func (*SignedWorkerRegister) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{2}
}

func (x *SignedWorkerRegister) GetProvisionerName() string {
	if x != nil {
		return x.ProvisionerName
	}
	return ""
}

func (x *SignedWorkerRegister) GetWorkerId() string {
	if x != nil {
		return x.WorkerId
	}
	return ""
}

func (x *SignedWorkerRegister) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *SignedWorkerRegister) GetResourceInfo() *ResourceInfo {
	if x != nil {
		return x.ResourceInfo
	}
	return nil
}

// Controller → Worker Task 할당
type TaskAssign struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`           // Task Id (UUIDv7)
	Queue         string                 `protobuf:"bytes,2,opt,name=queue,proto3" json:"queue,omitempty"`                           // Queue 이름
	Metadata      *structpb.Struct       `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`                     // Task 메타데이터
	Input         *structpb.Struct       `protobuf:"bytes,4,opt,name=input,proto3" json:"input,omitempty"`                           // Task 입력 데이터
	TimeoutMs     int64                  `protobuf:"varint,5,opt,name=timeout_ms,json=timeoutMs,proto3" json:"timeout_ms,omitempty"` // 타임아웃 (밀리초)
	Files         []*FileInfo            `protobuf:"bytes,6,rep,name=files,proto3" json:"files,omitempty"`                           // 업로드된 파일 정보
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskAssign) Reset() {
	*x = TaskAssign{}
	mi := &file_protocol_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskAssign) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskAssign) ProtoMessage() {}

func (x *TaskAssign) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskAssign.ProtoReflect.Descriptor instead.
func (*TaskAssign) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{3}
}

func (x *TaskAssign) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *TaskAssign) GetQueue() string {
	if x != nil {
		return x.Queue
	}
	return ""
}

func (x *TaskAssign) GetMetadata() *structpb.Struct {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *TaskAssign) GetInput() *structpb.Struct {
	if x != nil {
		return x.Input
	}
	return nil
}

func (x *TaskAssign) GetTimeoutMs() int64 {
	if x != nil {
		return x.TimeoutMs
	}
	return 0
}

func (x *TaskAssign) GetFiles() []*FileInfo {
	if x != nil {
		return x.Files
	}
	return nil
}

// Worker → Controller 진행상황 보고
type TaskProgress struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"` // Task ID
	Progress      float32                `protobuf:"fixed32,2,opt,name=progress,proto3" json:"progress,omitempty"`         // 진행률 (0.0-1.0)
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`             // 진행 메시지
	Data          *structpb.Struct       `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`                   // 추가 진행 데이터
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskProgress) Reset() {
	*x = TaskProgress{}
	mi := &file_protocol_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskProgress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskProgress) ProtoMessage() {}

func (x *TaskProgress) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskProgress.ProtoReflect.Descriptor instead.
func (*TaskProgress) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{4}
}

func (x *TaskProgress) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *TaskProgress) GetProgress() float32 {
	if x != nil {
		return x.Progress
	}
	return 0
}

func (x *TaskProgress) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *TaskProgress) GetData() *structpb.Struct {
	if x != nil {
		return x.Data
	}
	return nil
}

// Worker → Controller 완료 보고
type TaskComplete struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`                // Task ID
	Result        *structpb.Struct       `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`                              // 작업 결과
	ResultFiles   []*FileInfo            `protobuf:"bytes,3,rep,name=result_files,json=resultFiles,proto3" json:"result_files,omitempty"` // 결과 파일 정보
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskComplete) Reset() {
	*x = TaskComplete{}
	mi := &file_protocol_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskComplete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskComplete) ProtoMessage() {}

func (x *TaskComplete) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskComplete.ProtoReflect.Descriptor instead.
func (*TaskComplete) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{5}
}

func (x *TaskComplete) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *TaskComplete) GetResult() *structpb.Struct {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *TaskComplete) GetResultFiles() []*FileInfo {
	if x != nil {
		return x.ResultFiles
	}
	return nil
}

// Worker → Controller 실패 보고
type TaskFailed struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`                   // Task ID
	ErrorCode     string                 `protobuf:"bytes,2,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`          // 에러 코드
	ErrorMessage  string                 `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"` // 에러 메시지
	ErrorDetails  *structpb.Struct       `protobuf:"bytes,4,opt,name=error_details,json=errorDetails,proto3" json:"error_details,omitempty"` // 상세 에러 정보
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskFailed) Reset() {
	*x = TaskFailed{}
	mi := &file_protocol_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskFailed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskFailed) ProtoMessage() {}

func (x *TaskFailed) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskFailed.ProtoReflect.Descriptor instead.
func (*TaskFailed) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{6}
}

func (x *TaskFailed) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *TaskFailed) GetErrorCode() string {
	if x != nil {
		return x.ErrorCode
	}
	return ""
}

func (x *TaskFailed) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *TaskFailed) GetErrorDetails() *structpb.Struct {
	if x != nil {
		return x.ErrorDetails
	}
	return nil
}

// 연결 상태 유지
type Heartbeat struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Timestamp     int64                  `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                                          // 타임스탬프 (Unix milliseconds)
	Health        WorkerHealth           `protobuf:"varint,2,opt,name=health,proto3,enum=kr.jclab.distworker.protocol.WorkerHealth" json:"health,omitempty"` // Worker 상태
	ResourceUsage *ResourceUsage         `protobuf:"bytes,3,opt,name=resource_usage,json=resourceUsage,proto3" json:"resource_usage,omitempty"`              // 리소스 사용량
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Heartbeat) Reset() {
	*x = Heartbeat{}
	mi := &file_protocol_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Heartbeat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Heartbeat) ProtoMessage() {}

func (x *Heartbeat) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Heartbeat.ProtoReflect.Descriptor instead.
func (*Heartbeat) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{7}
}

func (x *Heartbeat) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Heartbeat) GetHealth() WorkerHealth {
	if x != nil {
		return x.Health
	}
	return WorkerHealth_WORKER_HEALTH_UNSPECIFIED
}

func (x *Heartbeat) GetResourceUsage() *ResourceUsage {
	if x != nil {
		return x.ResourceUsage
	}
	return nil
}

// Worker 리소스 정보
type ResourceInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hostname      string                 `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	CpuCores      int32                  `protobuf:"varint,2,opt,name=cpu_cores,json=cpuCores,proto3" json:"cpu_cores,omitempty"` // CPU 코어 수
	MemoryMb      int64                  `protobuf:"varint,3,opt,name=memory_mb,json=memoryMb,proto3" json:"memory_mb,omitempty"` // 메모리 (MiB)
	Additional    *structpb.Struct       `protobuf:"bytes,4,opt,name=additional,proto3" json:"additional,omitempty"`              // 추가 리소스 정보
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResourceInfo) Reset() {
	*x = ResourceInfo{}
	mi := &file_protocol_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceInfo) ProtoMessage() {}

func (x *ResourceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceInfo.ProtoReflect.Descriptor instead.
func (*ResourceInfo) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{8}
}

func (x *ResourceInfo) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *ResourceInfo) GetCpuCores() int32 {
	if x != nil {
		return x.CpuCores
	}
	return 0
}

func (x *ResourceInfo) GetMemoryMb() int64 {
	if x != nil {
		return x.MemoryMb
	}
	return 0
}

func (x *ResourceInfo) GetAdditional() *structpb.Struct {
	if x != nil {
		return x.Additional
	}
	return nil
}

// 리소스 사용량
type ResourceUsage struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	CpuPercent     float32                `protobuf:"fixed32,1,opt,name=cpu_percent,json=cpuPercent,proto3" json:"cpu_percent,omitempty"`             // CPU 사용률 (0-100)
	MemoryUsedMb   int64                  `protobuf:"varint,2,opt,name=memory_used_mb,json=memoryUsedMb,proto3" json:"memory_used_mb,omitempty"`      // 사용 중인 메모리 (MiB)
	GpuUtilization float32                `protobuf:"fixed32,3,opt,name=gpu_utilization,json=gpuUtilization,proto3" json:"gpu_utilization,omitempty"` // GPU 사용률 (0-100, 선택사항)
	Additional     *structpb.Struct       `protobuf:"bytes,4,opt,name=additional,proto3" json:"additional,omitempty"`                                 // 추가 사용량 정보
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ResourceUsage) Reset() {
	*x = ResourceUsage{}
	mi := &file_protocol_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceUsage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceUsage) ProtoMessage() {}

func (x *ResourceUsage) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceUsage.ProtoReflect.Descriptor instead.
func (*ResourceUsage) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{9}
}

func (x *ResourceUsage) GetCpuPercent() float32 {
	if x != nil {
		return x.CpuPercent
	}
	return 0
}

func (x *ResourceUsage) GetMemoryUsedMb() int64 {
	if x != nil {
		return x.MemoryUsedMb
	}
	return 0
}

func (x *ResourceUsage) GetGpuUtilization() float32 {
	if x != nil {
		return x.GpuUtilization
	}
	return 0
}

func (x *ResourceUsage) GetAdditional() *structpb.Struct {
	if x != nil {
		return x.Additional
	}
	return nil
}

// 파일 정보
type FileInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileId        string                 `protobuf:"bytes,1,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`                // 파일 ID
	Filename      string                 `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`                          // 원본 파일명
	ContentType   string                 `protobuf:"bytes,3,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"` // MIME 타입
	Size          int64                  `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`                                 // 파일 크기 (bytes)
	StorageUrl    string                 `protobuf:"bytes,5,opt,name=storage_url,json=storageUrl,proto3" json:"storage_url,omitempty"`    // 스토리지 URL (S3 등)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileInfo) Reset() {
	*x = FileInfo{}
	mi := &file_protocol_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileInfo) ProtoMessage() {}

func (x *FileInfo) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileInfo.ProtoReflect.Descriptor instead.
func (*FileInfo) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{10}
}

func (x *FileInfo) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *FileInfo) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *FileInfo) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *FileInfo) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *FileInfo) GetStorageUrl() string {
	if x != nil {
		return x.StorageUrl
	}
	return ""
}

// WebSocket 메시지 래퍼
type WebSocketMessage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Type  MessageType            `protobuf:"varint,1,opt,name=type,proto3,enum=kr.jclab.distworker.protocol.MessageType" json:"type,omitempty"`
	// Types that are valid to be assigned to Payload:
	//
	//	*WebSocketMessage_WorkerRegister
	//	*WebSocketMessage_WorkerRegisterResponse
	//	*WebSocketMessage_Heartbeat
	//	*WebSocketMessage_TaskAssign
	//	*WebSocketMessage_TaskProgress
	//	*WebSocketMessage_TaskComplete
	//	*WebSocketMessage_TaskFailed
	Payload       isWebSocketMessage_Payload `protobuf_oneof:"payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WebSocketMessage) Reset() {
	*x = WebSocketMessage{}
	mi := &file_protocol_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WebSocketMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebSocketMessage) ProtoMessage() {}

func (x *WebSocketMessage) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebSocketMessage.ProtoReflect.Descriptor instead.
func (*WebSocketMessage) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{11}
}

func (x *WebSocketMessage) GetType() MessageType {
	if x != nil {
		return x.Type
	}
	return MessageType_MESSAGE_TYPE_UNSPECIFIED
}

func (x *WebSocketMessage) GetPayload() isWebSocketMessage_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *WebSocketMessage) GetWorkerRegister() *WorkerRegister {
	if x != nil {
		if x, ok := x.Payload.(*WebSocketMessage_WorkerRegister); ok {
			return x.WorkerRegister
		}
	}
	return nil
}

func (x *WebSocketMessage) GetWorkerRegisterResponse() *WorkerRegisterResponse {
	if x != nil {
		if x, ok := x.Payload.(*WebSocketMessage_WorkerRegisterResponse); ok {
			return x.WorkerRegisterResponse
		}
	}
	return nil
}

func (x *WebSocketMessage) GetHeartbeat() *Heartbeat {
	if x != nil {
		if x, ok := x.Payload.(*WebSocketMessage_Heartbeat); ok {
			return x.Heartbeat
		}
	}
	return nil
}

func (x *WebSocketMessage) GetTaskAssign() *TaskAssign {
	if x != nil {
		if x, ok := x.Payload.(*WebSocketMessage_TaskAssign); ok {
			return x.TaskAssign
		}
	}
	return nil
}

func (x *WebSocketMessage) GetTaskProgress() *TaskProgress {
	if x != nil {
		if x, ok := x.Payload.(*WebSocketMessage_TaskProgress); ok {
			return x.TaskProgress
		}
	}
	return nil
}

func (x *WebSocketMessage) GetTaskComplete() *TaskComplete {
	if x != nil {
		if x, ok := x.Payload.(*WebSocketMessage_TaskComplete); ok {
			return x.TaskComplete
		}
	}
	return nil
}

func (x *WebSocketMessage) GetTaskFailed() *TaskFailed {
	if x != nil {
		if x, ok := x.Payload.(*WebSocketMessage_TaskFailed); ok {
			return x.TaskFailed
		}
	}
	return nil
}

type isWebSocketMessage_Payload interface {
	isWebSocketMessage_Payload()
}

type WebSocketMessage_WorkerRegister struct {
	WorkerRegister *WorkerRegister `protobuf:"bytes,2,opt,name=worker_register,json=workerRegister,proto3,oneof"`
}

type WebSocketMessage_WorkerRegisterResponse struct {
	WorkerRegisterResponse *WorkerRegisterResponse `protobuf:"bytes,3,opt,name=worker_register_response,json=workerRegisterResponse,proto3,oneof"`
}

type WebSocketMessage_Heartbeat struct {
	Heartbeat *Heartbeat `protobuf:"bytes,9,opt,name=heartbeat,proto3,oneof"`
}

type WebSocketMessage_TaskAssign struct {
	TaskAssign *TaskAssign `protobuf:"bytes,10,opt,name=task_assign,json=taskAssign,proto3,oneof"`
}

type WebSocketMessage_TaskProgress struct {
	TaskProgress *TaskProgress `protobuf:"bytes,11,opt,name=task_progress,json=taskProgress,proto3,oneof"`
}

type WebSocketMessage_TaskComplete struct {
	TaskComplete *TaskComplete `protobuf:"bytes,12,opt,name=task_complete,json=taskComplete,proto3,oneof"`
}

type WebSocketMessage_TaskFailed struct {
	TaskFailed *TaskFailed `protobuf:"bytes,13,opt,name=task_failed,json=taskFailed,proto3,oneof"`
}

func (*WebSocketMessage_WorkerRegister) isWebSocketMessage_Payload() {}

func (*WebSocketMessage_WorkerRegisterResponse) isWebSocketMessage_Payload() {}

func (*WebSocketMessage_Heartbeat) isWebSocketMessage_Payload() {}

func (*WebSocketMessage_TaskAssign) isWebSocketMessage_Payload() {}

func (*WebSocketMessage_TaskProgress) isWebSocketMessage_Payload() {}

func (*WebSocketMessage_TaskComplete) isWebSocketMessage_Payload() {}

func (*WebSocketMessage_TaskFailed) isWebSocketMessage_Payload() {}

var File_protocol_proto protoreflect.FileDescriptor

const file_protocol_proto_rawDesc = "" +
	"\n" +
	"\x0eprotocol.proto\x12\x1ckr.jclab.distworker.protocol\x1a\x1cgoogle/protobuf/struct.proto\"B\n" +
	"\x0eWorkerRegister\x12\x12\n" +
	"\x04data\x18\x01 \x01(\fR\x04data\x12\x1c\n" +
	"\tsignature\x18\x02 \x01(\fR\tsignature\"5\n" +
	"\x16WorkerRegisterResponse\x12\x1b\n" +
	"\tidle_time\x18\n" +
	" \x01(\x05R\bidleTime\"\xc3\x01\n" +
	"\x14SignedWorkerRegister\x12)\n" +
	"\x10provisioner_name\x18\x01 \x01(\tR\x0fprovisionerName\x12\x1b\n" +
	"\tworker_id\x18\x02 \x01(\tR\bworkerId\x12\x12\n" +
	"\x04date\x18\x03 \x01(\tR\x04date\x12O\n" +
	"\rresource_info\x18\x04 \x01(\v2*.kr.jclab.distworker.protocol.ResourceInfoR\fresourceInfo\"\xfc\x01\n" +
	"\n" +
	"TaskAssign\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12\x14\n" +
	"\x05queue\x18\x02 \x01(\tR\x05queue\x123\n" +
	"\bmetadata\x18\x03 \x01(\v2\x17.google.protobuf.StructR\bmetadata\x12-\n" +
	"\x05input\x18\x04 \x01(\v2\x17.google.protobuf.StructR\x05input\x12\x1d\n" +
	"\n" +
	"timeout_ms\x18\x05 \x01(\x03R\ttimeoutMs\x12<\n" +
	"\x05files\x18\x06 \x03(\v2&.kr.jclab.distworker.protocol.FileInfoR\x05files\"\x8a\x01\n" +
	"\fTaskProgress\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12\x1a\n" +
	"\bprogress\x18\x02 \x01(\x02R\bprogress\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\x12+\n" +
	"\x04data\x18\x04 \x01(\v2\x17.google.protobuf.StructR\x04data\"\xa3\x01\n" +
	"\fTaskComplete\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12/\n" +
	"\x06result\x18\x02 \x01(\v2\x17.google.protobuf.StructR\x06result\x12I\n" +
	"\fresult_files\x18\x03 \x03(\v2&.kr.jclab.distworker.protocol.FileInfoR\vresultFiles\"\xa7\x01\n" +
	"\n" +
	"TaskFailed\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12\x1d\n" +
	"\n" +
	"error_code\x18\x02 \x01(\tR\terrorCode\x12#\n" +
	"\rerror_message\x18\x03 \x01(\tR\ferrorMessage\x12<\n" +
	"\rerror_details\x18\x04 \x01(\v2\x17.google.protobuf.StructR\ferrorDetails\"\xc1\x01\n" +
	"\tHeartbeat\x12\x1c\n" +
	"\ttimestamp\x18\x01 \x01(\x03R\ttimestamp\x12B\n" +
	"\x06health\x18\x02 \x01(\x0e2*.kr.jclab.distworker.protocol.WorkerHealthR\x06health\x12R\n" +
	"\x0eresource_usage\x18\x03 \x01(\v2+.kr.jclab.distworker.protocol.ResourceUsageR\rresourceUsage\"\x9d\x01\n" +
	"\fResourceInfo\x12\x1a\n" +
	"\bhostname\x18\x01 \x01(\tR\bhostname\x12\x1b\n" +
	"\tcpu_cores\x18\x02 \x01(\x05R\bcpuCores\x12\x1b\n" +
	"\tmemory_mb\x18\x03 \x01(\x03R\bmemoryMb\x127\n" +
	"\n" +
	"additional\x18\x04 \x01(\v2\x17.google.protobuf.StructR\n" +
	"additional\"\xb8\x01\n" +
	"\rResourceUsage\x12\x1f\n" +
	"\vcpu_percent\x18\x01 \x01(\x02R\n" +
	"cpuPercent\x12$\n" +
	"\x0ememory_used_mb\x18\x02 \x01(\x03R\fmemoryUsedMb\x12'\n" +
	"\x0fgpu_utilization\x18\x03 \x01(\x02R\x0egpuUtilization\x127\n" +
	"\n" +
	"additional\x18\x04 \x01(\v2\x17.google.protobuf.StructR\n" +
	"additional\"\x97\x01\n" +
	"\bFileInfo\x12\x17\n" +
	"\afile_id\x18\x01 \x01(\tR\x06fileId\x12\x1a\n" +
	"\bfilename\x18\x02 \x01(\tR\bfilename\x12!\n" +
	"\fcontent_type\x18\x03 \x01(\tR\vcontentType\x12\x12\n" +
	"\x04size\x18\x04 \x01(\x03R\x04size\x12\x1f\n" +
	"\vstorage_url\x18\x05 \x01(\tR\n" +
	"storageUrl\"\xb0\x05\n" +
	"\x10WebSocketMessage\x12=\n" +
	"\x04type\x18\x01 \x01(\x0e2).kr.jclab.distworker.protocol.MessageTypeR\x04type\x12W\n" +
	"\x0fworker_register\x18\x02 \x01(\v2,.kr.jclab.distworker.protocol.WorkerRegisterH\x00R\x0eworkerRegister\x12p\n" +
	"\x18worker_register_response\x18\x03 \x01(\v24.kr.jclab.distworker.protocol.WorkerRegisterResponseH\x00R\x16workerRegisterResponse\x12G\n" +
	"\theartbeat\x18\t \x01(\v2'.kr.jclab.distworker.protocol.HeartbeatH\x00R\theartbeat\x12K\n" +
	"\vtask_assign\x18\n" +
	" \x01(\v2(.kr.jclab.distworker.protocol.TaskAssignH\x00R\n" +
	"taskAssign\x12Q\n" +
	"\rtask_progress\x18\v \x01(\v2*.kr.jclab.distworker.protocol.TaskProgressH\x00R\ftaskProgress\x12Q\n" +
	"\rtask_complete\x18\f \x01(\v2*.kr.jclab.distworker.protocol.TaskCompleteH\x00R\ftaskComplete\x12K\n" +
	"\vtask_failed\x18\r \x01(\v2(.kr.jclab.distworker.protocol.TaskFailedH\x00R\n" +
	"taskFailedB\t\n" +
	"\apayload*\x90\x02\n" +
	"\vMessageType\x12\x1c\n" +
	"\x18MESSAGE_TYPE_UNSPECIFIED\x10\x00\x12 \n" +
	"\x1cMESSAGE_TYPE_WORKER_REGISTER\x10\x02\x12)\n" +
	"%MESSAGE_TYPE_WORKER_REGISTER_RESPONSE\x10\x03\x12\x1a\n" +
	"\x16MESSAGE_TYPE_HEARTBEAT\x10\t\x12\x1c\n" +
	"\x18MESSAGE_TYPE_TASK_ASSIGN\x10\n" +
	"\x12\x1e\n" +
	"\x1aMESSAGE_TYPE_TASK_PROGRESS\x10\v\x12\x1e\n" +
	"\x1aMESSAGE_TYPE_TASK_COMPLETE\x10\f\x12\x1c\n" +
	"\x18MESSAGE_TYPE_TASK_FAILED\x10\r*s\n" +
	"\fWorkerHealth\x12\x1d\n" +
	"\x19WORKER_HEALTH_UNSPECIFIED\x10\x00\x12\x14\n" +
	"\x10WORKER_HEALTH_UP\x10\x01\x12\x16\n" +
	"\x12WORKER_HEALTH_DOWN\x10\x02\x12\x16\n" +
	"\x12WORKER_HEALTH_WARN\x10\x03*\xac\x01\n" +
	"\n" +
	"TaskStatus\x12\x1b\n" +
	"\x17TASK_STATUS_UNSPECIFIED\x10\x00\x12\x17\n" +
	"\x13TASK_STATUS_PENDING\x10\x01\x12\x1a\n" +
	"\x16TASK_STATUS_PROCESSING\x10\x02\x12\x19\n" +
	"\x15TASK_STATUS_COMPLETED\x10\x03\x12\x16\n" +
	"\x12TASK_STATUS_FAILED\x10\x04\x12\x19\n" +
	"\x15TASK_STATUS_CANCELLED\x10\x05B0Z.github.com/jc-lab/distworker/internal/protocolb\x06proto3"

var (
	file_protocol_proto_rawDescOnce sync.Once
	file_protocol_proto_rawDescData []byte
)

func file_protocol_proto_rawDescGZIP() []byte {
	file_protocol_proto_rawDescOnce.Do(func() {
		file_protocol_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_protocol_proto_rawDesc), len(file_protocol_proto_rawDesc)))
	})
	return file_protocol_proto_rawDescData
}

var file_protocol_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_protocol_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_protocol_proto_goTypes = []any{
	(MessageType)(0),               // 0: kr.jclab.distworker.protocol.MessageType
	(WorkerHealth)(0),              // 1: kr.jclab.distworker.protocol.WorkerHealth
	(TaskStatus)(0),                // 2: kr.jclab.distworker.protocol.TaskStatus
	(*WorkerRegister)(nil),         // 3: kr.jclab.distworker.protocol.WorkerRegister
	(*WorkerRegisterResponse)(nil), // 4: kr.jclab.distworker.protocol.WorkerRegisterResponse
	(*SignedWorkerRegister)(nil),   // 5: kr.jclab.distworker.protocol.SignedWorkerRegister
	(*TaskAssign)(nil),             // 6: kr.jclab.distworker.protocol.TaskAssign
	(*TaskProgress)(nil),           // 7: kr.jclab.distworker.protocol.TaskProgress
	(*TaskComplete)(nil),           // 8: kr.jclab.distworker.protocol.TaskComplete
	(*TaskFailed)(nil),             // 9: kr.jclab.distworker.protocol.TaskFailed
	(*Heartbeat)(nil),              // 10: kr.jclab.distworker.protocol.Heartbeat
	(*ResourceInfo)(nil),           // 11: kr.jclab.distworker.protocol.ResourceInfo
	(*ResourceUsage)(nil),          // 12: kr.jclab.distworker.protocol.ResourceUsage
	(*FileInfo)(nil),               // 13: kr.jclab.distworker.protocol.FileInfo
	(*WebSocketMessage)(nil),       // 14: kr.jclab.distworker.protocol.WebSocketMessage
	(*structpb.Struct)(nil),        // 15: google.protobuf.Struct
}
var file_protocol_proto_depIdxs = []int32{
	11, // 0: kr.jclab.distworker.protocol.SignedWorkerRegister.resource_info:type_name -> kr.jclab.distworker.protocol.ResourceInfo
	15, // 1: kr.jclab.distworker.protocol.TaskAssign.metadata:type_name -> google.protobuf.Struct
	15, // 2: kr.jclab.distworker.protocol.TaskAssign.input:type_name -> google.protobuf.Struct
	13, // 3: kr.jclab.distworker.protocol.TaskAssign.files:type_name -> kr.jclab.distworker.protocol.FileInfo
	15, // 4: kr.jclab.distworker.protocol.TaskProgress.data:type_name -> google.protobuf.Struct
	15, // 5: kr.jclab.distworker.protocol.TaskComplete.result:type_name -> google.protobuf.Struct
	13, // 6: kr.jclab.distworker.protocol.TaskComplete.result_files:type_name -> kr.jclab.distworker.protocol.FileInfo
	15, // 7: kr.jclab.distworker.protocol.TaskFailed.error_details:type_name -> google.protobuf.Struct
	1,  // 8: kr.jclab.distworker.protocol.Heartbeat.health:type_name -> kr.jclab.distworker.protocol.WorkerHealth
	12, // 9: kr.jclab.distworker.protocol.Heartbeat.resource_usage:type_name -> kr.jclab.distworker.protocol.ResourceUsage
	15, // 10: kr.jclab.distworker.protocol.ResourceInfo.additional:type_name -> google.protobuf.Struct
	15, // 11: kr.jclab.distworker.protocol.ResourceUsage.additional:type_name -> google.protobuf.Struct
	0,  // 12: kr.jclab.distworker.protocol.WebSocketMessage.type:type_name -> kr.jclab.distworker.protocol.MessageType
	3,  // 13: kr.jclab.distworker.protocol.WebSocketMessage.worker_register:type_name -> kr.jclab.distworker.protocol.WorkerRegister
	4,  // 14: kr.jclab.distworker.protocol.WebSocketMessage.worker_register_response:type_name -> kr.jclab.distworker.protocol.WorkerRegisterResponse
	10, // 15: kr.jclab.distworker.protocol.WebSocketMessage.heartbeat:type_name -> kr.jclab.distworker.protocol.Heartbeat
	6,  // 16: kr.jclab.distworker.protocol.WebSocketMessage.task_assign:type_name -> kr.jclab.distworker.protocol.TaskAssign
	7,  // 17: kr.jclab.distworker.protocol.WebSocketMessage.task_progress:type_name -> kr.jclab.distworker.protocol.TaskProgress
	8,  // 18: kr.jclab.distworker.protocol.WebSocketMessage.task_complete:type_name -> kr.jclab.distworker.protocol.TaskComplete
	9,  // 19: kr.jclab.distworker.protocol.WebSocketMessage.task_failed:type_name -> kr.jclab.distworker.protocol.TaskFailed
	20, // [20:20] is the sub-list for method output_type
	20, // [20:20] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_protocol_proto_init() }
func file_protocol_proto_init() {
	if File_protocol_proto != nil {
		return
	}
	file_protocol_proto_msgTypes[11].OneofWrappers = []any{
		(*WebSocketMessage_WorkerRegister)(nil),
		(*WebSocketMessage_WorkerRegisterResponse)(nil),
		(*WebSocketMessage_Heartbeat)(nil),
		(*WebSocketMessage_TaskAssign)(nil),
		(*WebSocketMessage_TaskProgress)(nil),
		(*WebSocketMessage_TaskComplete)(nil),
		(*WebSocketMessage_TaskFailed)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_protocol_proto_rawDesc), len(file_protocol_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_protocol_proto_goTypes,
		DependencyIndexes: file_protocol_proto_depIdxs,
		EnumInfos:         file_protocol_proto_enumTypes,
		MessageInfos:      file_protocol_proto_msgTypes,
	}.Build()
	File_protocol_proto = out.File
	file_protocol_proto_goTypes = nil
	file_protocol_proto_depIdxs = nil
}
